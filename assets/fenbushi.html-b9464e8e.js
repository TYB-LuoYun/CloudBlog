import{_ as a,o as s,c as n,a as e,b as t}from"./app-e22c1215.js";const c={},o=e("h1",{id:"八股文",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#八股文","aria-hidden":"true"},"#"),t(" 八股文")],-1),r=e("h2",{id:"分布式事务",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#分布式事务","aria-hidden":"true"},"#"),t(" 分布式事务")],-1),d=e("p",null,"CAP理论，分布式已经占据了P(分区容错性)，而A(可用性)和C(一致性)是不可同时满足的。希望保证一致性，就意味着需要忍受节点间可能的长时间的网络通信 CA不兼容的情况，又引出了BASE理论。BASE是对CAP中一致性和可用性权衡的结果(BA-基本可用，S-软状态，E-最终一致（Eventual Consistency）)。通过软状态来标识一致性过程的中间状态，让系统面对网络问题时能够保证基本的可用性，并且最终维护软状态的流转来保证最终一致性。 软状态:比如：在交易的场景中，因为会存在交易失败的情况，所以不会直接扣减 A 账户100到 B 账户上，而是先冻结 A 账户100",-1),i=[o,r,d];function _(h,l){return s(),n("div",null,i)}const u=a(c,[["render",_],["__file","fenbushi.html.vue"]]);export{u as default};
